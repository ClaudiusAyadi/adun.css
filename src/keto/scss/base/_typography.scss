@use "sass:map";
@use "sass:math";
@use "../abstracts/workers" as *;

// Use $fontFamily from /abstracts/workers
@mixin fontFamily {
	@each $font, $family in $fontFamily {
		--#{$font}: #{$family};
	}
}

/* FLUID TYPOGRAPHY */
$min-vp: map-get($container, minWidth) * 0.1rem;
$max-vp: map-get($container, maxWidth) * 0.1rem;

@function fluid($min-size, $max-size, $min-vp: $min-vp, $max-vp: $max-vp, $unit: vw) {
	$slope: math.div($max-size - $min-size, $max-vp - $min-vp);
	$scale: calc($slope * 100);
	$intercept: calc($min-size - $slope * $min-vp);
	$min-size: $min-size;
	$max-size: $max-size;
	@return clamp(#{$min-size}, #{$scale}#{$unit} + #{$intercept}, #{$max-size});
}

$fluidity: (
	text-xxs: #{fluid(1rem, 1.2rem)},
	text-xs: #{fluid(1.2rem, 1.4rem)},
	text-s: #{fluid(1.4rem, 1.6rem)},
	text-m: #{fluid(1.6rem, 1.8rem)},
	text-l: #{fluid(1.8rem, 2.2rem)},
	text-xl: #{fluid(2.2rem, 2.6rem)},
	text-xxl: #{fluid(2.6rem, 3.2rem)},
	text-3xl: #{fluid(3.2rem, 4.8rem)},
	text-4xl: #{fluid(4.8rem, 7.2rem)},
	text-5xl: #{fluid(7.2rem, 10.2rem)},
);

/* "text-" VARIABLES */
@mixin fluidType {
	@each $text, $value in $fluidity {
		--#{$text}: #{$value};
	}
}

/* "text-" FONT SIZE CLASSES */
@mixin texts {
	@each $text, $value in $fluidity {
		.#{$text} {
			font-size: var(--#{$text});
		}
	}
}
@include texts;

/* FONT WEIGHTS */
$fontWeights: (
	weight-100: 100,
	weight-200: 200,
	weight-300: 300,
	weight-400: 400,
	weight-500: 500,
	weight-600: 600,
	weight-700: 700,
	weight-800: 800,
	weight-900: 900,
);

/* FONT WEIGHT VARIABLES */
@mixin fontWeights {
	@each $font, $weight in $fontWeights {
		--#{$font}: #{$weight};
	}
}

/* FONT WEIGHT CLASSES */
@mixin weights {
	@each $font, $weight in $fontWeights {
		.#{$font} {
			font-weight: var(--#{$font});
		}
	}
}

@include weights;

/* LINE HEIGHT */
$lineHeights: (
	line-off: 1,
	line-xxs: 1.1,
	line-xs: 1.2,
	line-s: 1.3,
	line-m: 1.4,
	line-l: 1.5,
	line-xl: 1.6,
	line-xxl: 1.7,
	line-3xl: 1.8,
);

/* "line-" VARIABLES */
@mixin lineHeights {
	@each $lineHeight, $value in $lineHeights {
		--#{$lineHeight}: #{$value};
	}
}

/* "line-" CLASSES */
@mixin lines {
	@each $lineHeight, $value in $lineHeights {
		.#{$lineHeight} {
			line-height: var(--#{$lineHeight});
		}
	}
}

@include lines;

// DEFAULTS
[class*="text--"],
h1,
h2,
h3,
h4,
h5,
h6 {
	--font-family: var(--alt-font);
	--font-weight: var(--weight-900);
	font-size: var(--font-size);
	font-family: var(--font-family);
	font-weight: var(--font-weight);
	line-height: var(--line);
}

h1 {
	--font-size: var(--text-4xl);
	--line: var(--line-xs);
}

h2 {
	--font-size: var(--text-3xl);
	--line: var(--line-s);
}

h3 {
	--font-size: var(--text-xl);
	--line: var(--line-s);
}

h4 {
	--font-size: var(--text-l);
	--line: var(--line-s);
}

h5 {
	--font-size: var(--text-m);
	--line: var(--line-s);
}

h6 {
	--font-size: var(--text-s);
	--line: var(--line-m);
}
